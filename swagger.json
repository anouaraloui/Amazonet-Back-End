{
    "openapi": "3.0.3",
    "info": {
        "title": "Amazonet",
        "description": "This platform, similar to Amazon. It enables user authentication, product management, catalog browsing, shopping cart and checkout processes, order management, and more. The platform supports multiple roles, including customers, deliveryman, and administrators, providing each with specific features to manage products, orders, and user interactions."
    },
    "servers": [
        {
            "url": "http://localhost:4000/"
        }
    ],
    "tags": [
        {
            "name": "authentication",
            "description": "Authorization Users"
        },
        {
            "name": "users",
            "description": "Operations about user"
        },
        {
            "name": "products",
            "description": "Operations about Products"
        },
        {
            "name": "orders",
            "description": "Operations about Orders"
        }
    ],
    "paths": {
        "/auth/login": {
            "post": {
                "tags": [
                    "authentication"
                ],
                "summary": "Login user",
                "description": "Login user",
                "operationId": "loginUser",
                "requestBody": {
                    "description": "Login user",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "email",
                                        "example": "email@email.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "your_password"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You have successfully logged in"
                                        },
                                        "userId": {
                                            "type": "string",
                                            "example": "66c4a618f0ad07493daf1e96"
                                        },
                                        "role": {
                                            "type": "string",
                                            "example": "Role"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "token"
                                        },
                                        "refreshToken": {
                                            "type": "string",
                                            "example": "refresh token"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid email or password!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid email or password!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/recoverPassword": {
            "post": {
                "tags": [
                    "authentication"
                ],
                "summary": "Recover password user",
                "description": "Recover  password user",
                "operationId": "recoverPasswordUser",
                "requestBody": {
                    "description": "Recover password user",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "We sent reset password link to your email."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found!"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/resetPassword": {
            "patch": {
                "tags": [
                    "authentication"
                ],
                "summary": "Reset user Password",
                "description": "Reset user Password",
                "operationId": "resetUserPassword",
                "requestBody": {
                    "description": "Reset user Password",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "example": "new password"
                                    },
                                    "token": {
                                        "type": "string",
                                        "example": "token"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": ""
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "You have entered an actual password. Please enter a new password or log in again using the same password.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You have entered an actual password. Please enter a new password or log in again using the same password."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid Token!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 401
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid Token!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "There are no product!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "There are no product!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/signup": {
            "post": {
                "tags": [
                    "authentication"
                ],
                "summary": "Register a new user",
                "description": "Register a new user",
                "operationId": "registerNewUser",
                "requestBody": {
                    "description": "Register user object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "user_name"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "customer@email.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "Customer Password"
                                    },
                                    "role": {
                                        "type": "string",
                                        "example": "Customer / Deliveryman"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Welcome"
                                        },
                                        "user": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Email already exist!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Email already exist!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get the list of all users",
                "description": "Get the list of all users",
                "operationId": "listUsers",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Field to sort by",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "createdAtBefore",
                        "in": "query",
                        "description": "Filter users created before this date (YYYY-MM-DD format)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "createdAtAfter",
                        "in": "query",
                        "description": "Filter users created after this date (YYYY-MM-DD format)",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "limit": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "totalUsers": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "users": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "There are no users!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "There are no users!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "users"
                ],
                "summary": "Display one user",
                "description": "Display one user",
                "operationId": "displayOneUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "user": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found!"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user",
                "description": "Update user",
                "operationId": "UpdateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "requestBody": {
                    "description": "Created user object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "new_name"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "new_password"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully update the profile",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully update the profile"
                                        },
                                        "userId": {
                                            "type": "string",
                                            "example": "66b8db97e4b437c6b2569e79"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete user",
                "description": "Delete user",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The user that needs to be deleted",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Can not delete Admin User!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Can not delete Admin User!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/summary": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "users"
                ],
                "summary": "Display all of the summary",
                "description": "Display all of the summary",
                "operationId": "displaySummary",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "Summary": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/SummaryResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/products": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "products"
                ],
                "summary": "Create a new product ",
                "description": "Create a new product ",
                "operationId": "createProduct",
                "requestBody": {
                    "description": "Created product object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "name_product"
                                    },
                                    "slug": {
                                        "type": "string",
                                        "example": "tablette"
                                    },
                                    "category": {
                                        "type": "string",
                                        "example": "Electronics"
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": "image_product"
                                    },
                                    "price": {
                                        "type": "string",
                                        "example": "price_product"
                                    },
                                    "countInStock": {
                                        "type": "number",
                                        "example": 10
                                    },
                                    "brand": {
                                        "type": "string",
                                        "example": "apple"
                                    },
                                    "rating": {
                                        "type": "floot",
                                        "example": 2.5
                                    },
                                    "numReviews": {
                                        "type": "number",
                                        "example": "40"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "description_product"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product created"
                                        },
                                        "productCreated": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "products"
                ],
                "summary": "Get the list of all products",
                "description": "Get the list of all products",
                "operationId": "listProducts",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "listProducts": {
                                            "type": "number",
                                            "example": 1
                                        },
                                        "products": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "There are no products!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "There are no products!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/products/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "products"
                ],
                "summary": "Get product whose identifier is known",
                "description": "Get product whose identifier is known",
                "operationId": "getProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "product": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "products"
                ],
                "summary": "Update product whose identifier is known",
                "description": "Update product whose identifier is known",
                "operationId": "updateProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The product that needs to updated",
                        "required": true
                    }
                ],
                "requestBody": {
                    "description": "Product with new properties",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "type": "string",
                                        "example": "image_product"
                                    },
                                    "countInStock": {
                                        "type": "number",
                                        "example": 10
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "description_product"
                                    },
                                    "discount": {
                                        "type": "floot",
                                        "example": 12.5
                                    },
                                    "priceDiscount": {
                                        "type": "floot",
                                        "example": 49.000
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product updated"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Bad request!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found!"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "products"
                ],
                "summary": "Delete product whose identifier is known",
                "description": "Delete product whose identifier is known",
                "operationId": "deleteProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The product that needs to be deleted",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product is deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product is deleted"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/products/filter": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "products"
                ],
                "summary": "Get a list of all filtered products with price",
                "description": "Get a list of all filtered products with price",
                "operationId": "listFilteredProductsPrice",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Field to sort by",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "minPrice",
                        "in": "query",
                        "description": "Filter users created great then this price",
                        "required": true,
                        "type": "floot"
                    },
                    {
                        "name": "maxPrice",
                        "in": "query",
                        "description": "Filter users created less then this price",
                        "required": true,
                        "type": "floot"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "limit": {
                                            "type": "integer",
                                            "example": 30
                                        },
                                        "totalProducts": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "products": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid price range!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid price range!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "There are no product!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "There are no product!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/products/filter/search": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "products"
                ],
                "summary": "Filter and search for products",
                "description": "Filter products based on category, price, rating, and search query. Also supports sorting and pagination.",
                "operationId": "filterProduct",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page number",
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Number of items per page"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Category of product"
                    },
                    {
                        "name": "minPrice",
                        "in": "query",
                        "description": "Filter users created great then this price",
                        "required": false,
                        "type": "floot"
                    },
                    {
                        "name": "maxPrice",
                        "in": "query",
                        "description": "Filter users created less then this price",
                        "required": false,
                        "type": "floot"
                    },
                    {
                        "name": "rating",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Rating of the product"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "featured",
                                "lowest",
                                "highest",
                                "toprated",
                                "newest"
                            ],
                            "default": "featured"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "listProducts": {
                                            "type": "number",
                                            "example": 1
                                        },
                                        "products": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid price range!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid price range!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "There are no product!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "There are no product!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/products/department/categories": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "products"
                ],
                "summary": "Display all products with category",
                "description": "Display all products with category",
                "operationId": "productsCategory",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "categories": {
                                            "type": "array",
                                            "example": [
                                                "Electronics",
                                                "Men's Fashion"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/products/slug/{slug}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "products"
                ],
                "summary": "Display all products with slug",
                "description": "Display all products with slug",
                "operationId": "productsSlug",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "slug": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/products/{id}/reviews": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "products"
                ],
                "summary": "Add your reviews",
                "description": "Add your reviews",
                "operationId": "addReviews",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "requestBody": {
                    "description": "Register user object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "user_name"
                                    },
                                    "comment": {
                                        "type": "string",
                                        "example": "Customer Comment"
                                    },
                                    "rating": {
                                        "type": "floot",
                                        "example": 2
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Review created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Review created"
                                        },
                                        "review": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "user_name"
                                                },
                                                "comment": {
                                                    "type": "string",
                                                    "example": "Customer Comment"
                                                },
                                                "rating": {
                                                    "type": "number",
                                                    "example": 2
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "You already submitted review!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You already submitted review!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orders": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Get the list of all order",
                "description": "Get the list of all order",
                "operationId": "listOrders",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "listOrders": {
                                            "type": "number",
                                            "example": 1
                                        },
                                        "orders": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/Order"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No orders yet!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No orders yet!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orders/{id}": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Create a new order ",
                "description": "Create a new order ",
                "operationId": "createOrder",
                "requestBody": {
                    "description": "Created order object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "shippingAddress": {
                                        "type": "object",
                                        "properties": {
                                            "fullName": {
                                                "type": "string",
                                                "example": "Customer Customer"
                                            },
                                            "address": {
                                                "type": "string",
                                                "example": "Cutomer Adress"
                                            },
                                            "phonne": {
                                                "type": "number",
                                                "example": "00000000"
                                            },
                                            "city": {
                                                "type": "string",
                                                "example": "Jendouba"
                                            },
                                            "postalCode": {
                                                "type": "number",
                                                "example": "8115"
                                            },
                                            "country": {
                                                "type": "string",
                                                "example": "Tunisie"
                                            }
                                        }
                                    },
                                    "paymentMethod": {
                                        "type": "string",
                                        "example": "PayPal"
                                    },
                                    "itemsPrice": {
                                        "type": "number",
                                        "example": 2
                                    },
                                    "numberOfPieces": {
                                        "type": "number",
                                        "example": 2
                                    },
                                    "shippingPrice": {
                                        "type": "number",
                                        "example": 42
                                    },
                                    "taxPrice": {
                                        "type": "number",
                                        "example": 6
                                    },
                                    "totalPrice": {
                                        "type": "number",
                                        "example": 84
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order updatet because you already have order with this product"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Order created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order created"
                                        },
                                        "orderCreated": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/Order"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Bad request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Get one order",
                "description": "Get one order",
                "operationId": "getOrder",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "order": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order not found!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Delete order whose identifier is known",
                "description": "Delete order whose identifier is known",
                "operationId": "deleteOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The order that needs to be deleted",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order deleted!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order deleted!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unable to delete this order!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unable to delete this order!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order not found!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error!"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Update order whose identifier is known",
                "description": "Update order whose identifier is known",
                "operationId": "updateOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The order that needs to updated",
                        "required": true
                    }
                ],
                "requestBody": {
                    "description": "Order with new properties",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "shippingAddress": {
                                        "type": "object",
                                        "properties": {
                                            "fullName": {
                                                "type": "string",
                                                "example": "Customer Customer"
                                            },
                                            "address": {
                                                "type": "string",
                                                "example": "Cutomer Adress"
                                            },
                                            "phonne": {
                                                "type": "number",
                                                "example": "00000000"
                                            },
                                            "city": {
                                                "type": "string",
                                                "example": "Jendouba"
                                            },
                                            "postalCode": {
                                                "type": "number",
                                                "example": "8115"
                                            },
                                            "country": {
                                                "type": "string",
                                                "example": "Tunisie"
                                            }
                                        }
                                    },
                                    "paymentMethod": {
                                        "type": "string",
                                        "example": "PayPal"
                                    },
                                    "numberOfPieces": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order updated"
                                        },
                                        "order": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/Order"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unable to update this order!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unable to update this order!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order not found!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error!"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orders/deliver/{id}": {
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Accept Order By The Deliveryman",
                "description": "Accept Order By The Deliveryman",
                "operationId": "decisionDeliveryMan",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The order that needs to accepted",
                        "required": true
                    }
                ],
                "requestBody": {
                    "description": "Your decision",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "decision": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Your answer is sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Your answer is sent successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "This order is not available now!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "This order is not available now!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error!"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orders/pay/{id}": {
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Payed the order by the customer",
                "description": "Payed the order by the customer",
                "operationId": "paymentCustomer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The order that the customer is to be paid for",
                        "required": true
                    }
                ],
                "requestBody": {
                    "description": "Confrim the payment",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "example": "paid"
                                    },
                                    "email_address": {
                                        "type": "string",
                                        "example": "customer@email.com"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order updated"
                                        },
                                        "order": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/Order"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order not found!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error!"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "required": [
                    "name",
                    "email",
                    "password",
                    "role"
                ],
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "example": "66b8db97e4b437c6b2569e79"
                    },
                    "name": {
                        "type": "string",
                        "example": "customer"
                    },
                    "email": {
                        "type": "string",
                        "example": "customer@email.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "Customer Password"
                    },
                    "role": {
                        "type": "string",
                        "example": "Customer",
                        "enum": [
                            "Customer",
                            "Deliveryman"
                        ]
                    }
                }
            },
            "Product": {
                "required": [
                    "name",
                    "slug",
                    "brand",
                    "category",
                    "description",
                    "price",
                    "countInStock",
                    "rating",
                    "numReviews"
                ],
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "example": "66c1c679b966da0f213a2aad"
                    },
                    "name": {
                        "type": "string",
                        "example": "customer"
                    },
                    "slug": {
                        "type": "string",
                        "example": "slug"
                    },
                    "image": {
                        "type": "string",
                        "example": "Product Image"
                    },
                    "category": {
                        "type": "string",
                        "example": "Electronics",
                        "enum": [
                            "Electronics",
                            "Computers",
                            "Women's Fashion",
                            "Men's Fashion",
                            "Video Games",
                            "Books"
                        ]
                    },
                    "description": {
                        "type": "string",
                        "example": "description"
                    },
                    "price": {
                        "type": "integer",
                        "example": "20.000"
                    },
                    "discount": {
                        "type": "integer",
                        "example": "10.5"
                    },
                    "priceDiscount": {
                        "type": "integer",
                        "example": "4.50"
                    },
                    "countInStock": {
                        "type": "number",
                        "example": "3"
                    },
                    "rating": {
                        "type": "number",
                        "example": "3"
                    },
                    "numReviews": {
                        "type": "number",
                        "example": "3"
                    },
                    "reviews": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Review"
                        }
                    }
                }
            },
            "Review": {
                "required": [
                    "name",
                    "comment",
                    "rating"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "user_name"
                    },
                    "comment": {
                        "type": "string",
                        "example": "comment of product"
                    },
                    "rating": {
                        "type": "number",
                        "example": 3
                    }
                }
            },
            "Order": {
                "required": [
                    "orderItems",
                    "productID",
                    "shippingAddress",
                    "paymentMethod",
                    "numberOfPieces",
                    "itemsPrice",
                    "shippingPrice",
                    "taxPrice",
                    "totalPrice",
                    "user"
                ],
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "example": "66c1c679b966da0f213a2aad"
                    },
                    "orderItems": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "example": {
                                "productID": "60d0fe4f5311236168a109ca",
                                "quantity": 2,
                                "price": 49.99
                            }
                        }
                    },
                    "productID": {
                        "type": "string",
                        "example": "60d0fe4f5311236168a109ca"
                    },
                    "shippingAddress": {
                        "required": [
                            "fullName",
                            "address",
                            "phone",
                            "city",
                            "postalCode",
                            "country"
                        ],
                        "type": "object",
                        "properties": {
                            "fullName": {
                                "type": "string",
                                "example": "Full Name"
                            },
                            "address": {
                                "type": "string",
                                "example": "Full Adress"
                            },
                            "phone": {
                                "type": "number",
                                "example": 1234567890
                            },
                            "city": {
                                "type": "string",
                                "example": "Tunis"
                            },
                            "postalCode": {
                                "type": "string",
                                "example": "1000"
                            },
                            "country": {
                                "type": "string",
                                "example": "Tunisia"
                            },
                            "location": {
                                "type": "object",
                                "properties": {
                                    "lat": {
                                        "type": "number",
                                        "example": 40.7128
                                    },
                                    "lng": {
                                        "type": "number",
                                        "example": -74.0060
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "Tunis, Tunisia"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Home"
                                    },
                                    "vicinity": {
                                        "type": "string",
                                        "example": "Near Central Park"
                                    },
                                    "googleAddressId": {
                                        "type": "string",
                                        "example": "ChIJOwg_06VPwokRYv534QaPC8g"
                                    }
                                }
                            }
                        }
                    },
                    "paymentMethod": {
                        "type": "string",
                        "example": "PayPal"
                    },
                    "paymentResult": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "example": "PAYID-LXHD6RQ4J5374582K7514701"
                            },
                            "status": {
                                "type": "string",
                                "example": "Completed"
                            },
                            "update_time": {
                                "type": "string",
                                "example": "2023-08-17T12:34:56Z"
                            },
                            "email_address": {
                                "type": "string",
                                "example": "example@example.com"
                            }
                        }
                    },
                    "numberOfPieces": {
                        "type": "number",
                        "example": 3
                    },
                    "itemsPrice": {
                        "type": "number",
                        "example": 149.97
                    },
                    "shippingPrice": {
                        "type": "number",
                        "example": 10.00
                    },
                    "taxPrice": {
                        "type": "number",
                        "example": 13.50
                    },
                    "totalPrice": {
                        "type": "number",
                        "example": 173.47
                    },
                    "user": {
                        "type": "string",
                        "example": "60d0fe4f5311236168a109cb"
                    },
                    "delivery": {
                        "type": "object",
                        "properties": {
                            "deliverymanID": {
                                "type": "string",
                                "example": "60d0fe4f5311236168a109cc"
                            },
                            "deliverymanStatus": {
                                "type": "boolean",
                                "example": true
                            },
                            "deliveredAt": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2023-08-18T16:00:00Z"
                            }
                        }
                    },
                    "isPaid": {
                        "type": "boolean",
                        "example": true
                    },
                    "isDelivered": {
                        "type": "boolean",
                        "example": false
                    },
                    "paidAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-08-17T14:00:00Z"
                    },
                    "orderStatus": {
                        "type": "boolean",
                        "example": true
                    }
                }
            },
            "UserSummary": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "example": "null"
                    },
                    "numUsers": {
                        "type": "integer",
                        "example": 100
                    }
                }
            },
            "OrderSummary": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "example": "null"
                    },
                    "numOrders": {
                        "type": "integer",
                        "example": 7
                    },
                    "totalSales": {
                        "type": "number",
                        "format": "float",
                        "example": 1260
                    }
                }
            },
            "DailyOrders": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "example": "2024-08-10"
                    },
                    "orders": {
                        "type": "integer",
                        "example": 2
                    },
                    "sales": {
                        "type": "number",
                        "format": "float",
                        "example": 1100
                    }
                }
            },
            "ProductCategorySummary": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "example": "Electronics"
                    },
                    "count": {
                        "type": "integer",
                        "example": 20
                    }
                }
            },
            "SummaryResponse": {
                "type": "object",
                "properties": {
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserSummary"
                        }
                    },
                    "orders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderSummary"
                        }
                    },
                    "dailyOrders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DailyOrders"
                        }
                    },
                    "productCategories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductCategorySummary"
                        }
                    }
                }
            }
        },
        "requestBodies": {
            "User": {
                "description": "List of Users",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/User"
                        }
                    }
                }
            },
            "Product": {
                "description": "List of Products",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Product"
                        }
                    }
                }
            },
            "Order": {
                "description": "List of Orders",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Order"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "Bearer": {
                "type": "apiKey",
                "name": "authorization",
                "in": "header"
            }
        }
    }
}